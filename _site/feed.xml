<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lu Nie Blog</title>
    <description>A Simple Persoanl Blog. # this means to ignore newlines until &quot;baseurl:&quot;
</description>
    <link>/lunie2021.github.io/</link>
    <atom:link href="/lunie2021.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 12 Feb 2021 12:21:41 +0800</pubDate>
    <lastBuildDate>Fri, 12 Feb 2021 12:21:41 +0800</lastBuildDate>
    <generator>Jekyll v4.2.0</generator>
    
      <item>
        <title>将Blog放进冰箱拢共分几步？</title>
        <description>&lt;p&gt;本文旨在证明一个啥也不懂的人也能搭建个人博客。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;前情提要&quot;&gt;前情提要&lt;/h3&gt;
  &lt;h3 id=&quot;主要步骤&quot;&gt;主要步骤&lt;/h3&gt;
  &lt;h3 id=&quot;大概率会遇到的坑&quot;&gt;大概率会遇到的坑&lt;/h3&gt;
  &lt;h3 id=&quot;参考资料&quot;&gt;参考资料&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;前情提要-1&quot;&gt;前情提要&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;操作系统&lt;/strong&gt;：macOS Catalina&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ruby Version&lt;/strong&gt;: 3.0.0&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Jekyll Version&lt;/strong&gt;: 4.2.0&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;为什么要用github pages 搭建个人博客？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;因为免费，借用github的服务器可免费搭建个人博客。并且在不同电脑端更新博客也很方便，git clone 即可。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;为啥用Jekyll？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;因为Jekyll有很多好看的主题，并且可以实现静态网页预览，这可以使用户更加专注在内容本身，而不是花枝招展复杂的代码。&lt;/p&gt;

&lt;h1 id=&quot;关键步骤&quot;&gt;关键步骤&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;准备前提环境&lt;/li&gt;
  &lt;li&gt;安装Jekyll&lt;/li&gt;
  &lt;li&gt;选择主题，搭建博客&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1-环境配置&quot;&gt;1 环境配置&lt;/h2&gt;

&lt;p&gt;安装 Command Line Tools&lt;/p&gt;

&lt;p&gt;打开terminal，运行：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;xcode-select --install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;用Homebrew安装Ruby：Jekyll需要在Ruby环境下运行，因此首先安装Ruby.&lt;/p&gt;

&lt;p&gt;安装 Homebrew&lt;/p&gt;

&lt;p&gt;如果用官网的方式，大概率是显示连接失败，无法安装（因为你懂的原因），需要更换国内的源。
&lt;a href=&quot;https://zhuanlan.zhihu.com/p/111014448&quot;&gt;详情点击此处。&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;terminal输入：&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/bin/zsh -c &quot;$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;安装Ruby&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install ruby 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;将ruby路经添加到shell configutation&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# If you&apos;re using Zsh
echo &apos;export PATH=&quot;/usr/local/opt/ruby/bin:$PATH&quot;&apos; &amp;gt;&amp;gt; ~/.zshrc

# If you&apos;re using Bash
echo &apos;export PATH=&quot;/usr/local/opt/ruby/bin:$PATH&quot;&apos; &amp;gt;&amp;gt; ~/.bash_profile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;另，如果有多个版本的Ruby需要安装，可以用rbenv来管理。&lt;/p&gt;

&lt;h2 id=&quot;2-安装-jekyll&quot;&gt;2 安装 jekyll&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 安装bundler和 jekyll 

gem install --user-install bundler jekyll

# 将X.X 替换为当前使用的ruby版本（ruby -v 查看）

echo &apos;export PATH=&quot;$HOME/.gem/ruby/X.X.0/bin:$PATH&quot;&apos; &amp;gt;&amp;gt; ~/.zshrc 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;至此，jekyll 安装完成！！&lt;/p&gt;

&lt;p&gt;可输入 jekyll -v 确认。&lt;/p&gt;

&lt;p&gt;接下来就是创建一个新blog, 可以自己直接新建，也可以用别人的主题模板。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;3-独立自主创建一个blog&quot;&gt;3. 独立自主创建一个blog&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jekyll new myblog 

cd myblog

# build网站，并在本地建一个服务器
bundle exec jekyll serve 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;最后terminal会显示一个站点，可用浏览器打开。用于网站预览。&lt;/p&gt;

&lt;p&gt;预览无误，推送（合并到“使用模板搭建”部分细讲）。&lt;/p&gt;

&lt;h2 id=&quot;4-使用模板搭建一个blog&quot;&gt;4. 使用模板搭建一个blog&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;搭建：在github建一个自己用户名的仓库: username.github.io&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;clone： 
选中的jekyll theme clone到本地 (也可根据模板作者在 READ ME中提示的方式进行)；另再将自己的仓库clone到本地，作为本地仓库。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;推送：在本地根据自己需求修改好后，push到远端 username.github.io&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;41-搭建&quot;&gt;4.1 搭建&lt;/h3&gt;
&lt;p&gt;在GitHub新建一个仓库。&lt;/p&gt;
&lt;h3 id=&quot;42-clone&quot;&gt;4.2 clone&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# git clone + 站点地址的形式
git clone https://github.com/username/username.github.io.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;修改模板文件夹的信息，基本修改 _config.yml 里的个人信息即可。&lt;/p&gt;

&lt;p&gt;了解整个文件夹内容后，可以修改任何信息。&lt;/p&gt;
&lt;h3 id=&quot;43-push&quot;&gt;4.3 push&lt;/h3&gt;
&lt;p&gt;push之前一定要做两步：&lt;/p&gt;

&lt;p&gt;$ git add .&lt;/p&gt;

&lt;p&gt;$ git commit -m ‘被修改过的文件名称’&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 保存修改内容
git add .
git commit -m &apos;lunie2021.github.io&apos;
# 确认远端仓库是否为自己的站点，还是模板所在站点
git remote -v
# 修改为自己站点
git remote set-url origin https://github.com/username/username.github.io.git
# push
git push -u origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h1 id=&quot;安装过程遇到的各种坑&quot;&gt;安装过程遇到的各种坑&lt;/h1&gt;
&lt;blockquote&gt;
  &lt;p&gt;如果直接用homebrew官网提供的语句在终端中运行，会出现connect failed 报错&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;原因：因为“你懂的”原因，官网的域名被“污染”。因此，需要用国内的镜像网站上的安装源。&lt;/p&gt;

&lt;p&gt;解决：&lt;/p&gt;

&lt;p&gt;国内镜像安装方式： https://zhuanlan.zhihu.com/p/111014448&lt;/p&gt;

&lt;p&gt;简单来说，运行自动脚本，选择一个安装源即可，接着就自动安装。&lt;/p&gt;

&lt;p&gt;安装脚本：/bin/zsh -c “$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)”&lt;/p&gt;

&lt;p&gt;卸载脚本：/bin/zsh -c “$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/HomebrewUninstall.sh)”&lt;/p&gt;

&lt;p&gt;最后，如果显示 already up-to-date. 表示成功。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;安装过程报错：
Error: Fetching /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core failed! ==&amp;gt; Homebrew has enabled anonymous aggregate formula and cask analytics. Read the analytics documentation (and how to opt-out) here: https://docs.brew.sh/Analytics
No analytics have been recorded yet (nor will be during this &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;brew&lt;/code&gt; run).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;解决：参照官网提示 https://docs.brew.sh/Analytics，将Google analysis 功能解除，即可。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;(sudo) gem Jekyll成功后，输入“Jekyll -v”检查，发现Jekyll未能成功安装。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;原因：升级了macOS Catalina，新系统的shell已经更换为zsh。导致之前的安装都是在bash下进行的，zsh并没有完成。
发现这个是因为terminal中的提示：&lt;/p&gt;

&lt;p&gt;The default interactive shell is now zsh. 
To update your account to use zsh, please run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chsh -s /bin/zsh&lt;/code&gt;. 
For more details, please visit https://support.apple.com/kb/HT208050.&lt;/p&gt;

&lt;p&gt;解决方法：
解决方法：&lt;/p&gt;

&lt;p&gt;step 1&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;不使用bash，切换zsh，chsh -s /bin/zsh命令切换即可。（我使用的1）&lt;/li&gt;
  &lt;li&gt;继续使用bash。-输入vim ./.bash_profile 回车，然后就打开了bash_profile文件。-点击i建进入编辑状态，添加 export BASH_SILENCE_DEPRECATION_WARNING=1，这样一个环境变量就添加上了。-点击esc退出编辑状态，输入:wq回车保存退出。-输入source ～/.bash_profile ，让配置文件在修改后立即生效。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;step 2: 当terminal进入zsh界面后，确认homebrew, ruby 是否安装，接着重新安装Jekyll&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jekyll serve时，出现…./Users/apple/.local/share/gem/ruby/3.0.0/gems/jekyll-4.2.0/lib/jekyll/commands/serve/servlet.rb:3:in `require’: cannot load such file – webrick (LoadError)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;原因：运行serve时，找不到webrick 文件。这是因为新版的 Ruby-3-0-0 不再包含webrick 文件。&lt;/p&gt;

&lt;p&gt;解决方法：自己安装。&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle add webrick
# 重新jekyll build 
jekyll build
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jekyll/jekyll/issues/8523&quot;&gt;点击参考&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Not Found: /favicon.ico &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;原因：文件中缺少网站标识图片，可以不管，也可以提供。
&lt;a href=&quot;https://blog.csdn.net/weixin_43972292/article/details/90216241&quot;&gt;点击参考&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;git push后，显示everything up-to-data, GitHub仓库并没有更新。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;原因：没有使用GitHub的专用存储语句；&lt;/p&gt;

&lt;p&gt;解决方法：
Jekyll预览无误后，输入：&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; #将修改的内容放进storage
 git add .  

 # 提交至本地仓库
 git commit -m &apos;上传项目&apos; 

 #上传至远端仓库，出现master -&amp;gt; master 表示上传成功；
 git push origin master 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;网站点击文章内对应的标签，直接跳转至GitHub仓库的tags页面，而不是blog内的tag页面。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;原因：layout中关于post的设置里，tag跳转给的链接如下：
“&amp;lt;a class=”post-tags-item” href=”/lunie2021.github.io/tags/”&amp;gt;&amp;lt;/a&amp;gt;”；显然，”site.url.site.baseurl.tag”这个路径指向的就是github仓库的tags;&lt;/p&gt;

&lt;p&gt;解决方法：
将路径改为博客内的tag位置；_congif.yml中url留白；&lt;/p&gt;

&lt;h1 id=&quot;参考资料-1&quot;&gt;参考资料&lt;/h1&gt;
&lt;p&gt;【1】&lt;a href=&quot;https://jekyllrb.com/&quot;&gt;jekyll官方网站&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;【2】&lt;a href=&quot;https://www.bilibili.com/video/BV14x411t7ZU?from=search&amp;amp;seid=7751760845604383004&quot;&gt;指路b站&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;【3】&lt;a href=&quot;https://www.bilibili.com/video/BV1rC4y1878Y/?spm_id_from=333.788.recommend_more_video.0&quot;&gt;指路b站&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;【4】&lt;a href=&quot;https://www.cnblogs.com/A--G/p/5112619.html&quot;&gt;利用模板搭建jekyll&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;【5】&lt;a href=&quot;https://www.zhihu.com/question/20223939&quot;&gt;还不错的主题推荐&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Wed, 10 Feb 2021 00:00:00 +0800</pubDate>
        <link>/lunie2021.github.io/jekyll/how-to-establish-blog.html</link>
        <guid isPermaLink="true">/lunie2021.github.io/jekyll/how-to-establish-blog.html</guid>
        
        <category>jekyll</category>
        
        <category>Blog</category>
        
        
        <category>Jekyll</category>
        
      </item>
    
      <item>
        <title>Markdown 基本语法</title>
        <description>&lt;p&gt;本文整理一些markdown的常用语法，以用于编写博客。&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档,在2004由约翰·格鲁伯（英语：John Gruber）创建。
Markdown 编写的文档可以导出 HTML、Word、图像、PDF、Epub 等多种格式的文档，后缀为 .md, .markdown。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;常用语法&quot;&gt;常用语法&lt;/h3&gt;
  &lt;h3 id=&quot;可用编辑器&quot;&gt;可用编辑器&lt;/h3&gt;
  &lt;h3 id=&quot;参考资料&quot;&gt;参考资料&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;1-常用语法&quot;&gt;1. 常用语法&lt;/h1&gt;

&lt;h3 id=&quot;字体&quot;&gt;字体&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;粗体&lt;/strong&gt;：**&lt;输入内容&gt;**&lt;/输入内容&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;斜体&lt;/strong&gt;：*&lt;输入内容&gt;*&lt;/输入内容&gt;&lt;/p&gt;

&lt;h3 id=&quot;段落&quot;&gt;段落&lt;/h3&gt;
&lt;p&gt;在行首前加#，数量对应标题的等级；
一级段落标题： #+段落标题
二级段落标题：##+段落标题
三级段落标题：###+段落标题&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;或者&lt;/strong&gt;，&lt;/p&gt;

&lt;p&gt;一级标题下加一行”=====”
二级标题下加一行“—–”
三级标题前，加”###”&lt;/p&gt;

&lt;h3 id=&quot;没有序号的point&quot;&gt;没有序号的point&lt;/h3&gt;

&lt;p&gt;“短横（-）空格+内容”&lt;/p&gt;

&lt;p&gt;效果如下：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;point&lt;/li&gt;
  &lt;li&gt;point&lt;/li&gt;
  &lt;li&gt;point&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;分隔符&quot;&gt;分隔符&lt;/h3&gt;
&lt;p&gt;“—”（上下间隔一行，否则会被识别为二级标题）&lt;/p&gt;

&lt;p&gt;效果如下：&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;外链接&quot;&gt;外链接&lt;/h3&gt;
&lt;p&gt;用法：[描述](链接地址)
链接地址会贴在描述上。&lt;/p&gt;

&lt;h3 id=&quot;插入图片&quot;&gt;插入图片&lt;/h3&gt;
&lt;p&gt;用法：[描述](图片地址)
链接会贴在图片上，不过暂时不清楚本地图片链接的获取。&lt;/p&gt;

&lt;h3 id=&quot;highlight代码&quot;&gt;highlight代码&lt;/h3&gt;
&lt;p&gt;用三个```,将引用的代码括起来。（英文状态下的数字1旁边的键对应的点）&lt;/p&gt;

&lt;p&gt;效果如下：&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;我是一行代码
我是第二行代码
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;文字引用&quot;&gt;文字引用&lt;/h3&gt;
&lt;p&gt;”&amp;gt;”+”引用内容”&lt;/p&gt;

&lt;p&gt;效果如下：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;我有嘉宾，鼓瑟吹笙。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;todo-list&quot;&gt;Todo list&lt;/h3&gt;

&lt;p&gt;代办事项用“[ ]”开头；&lt;/p&gt;

&lt;p&gt;已完成用“[x]开头”&lt;/p&gt;

&lt;p&gt;效果见下：(失效中)&lt;/p&gt;

&lt;p&gt;[ ]  ddl快到啦&lt;/p&gt;

&lt;p&gt;[ ]  ddl已经到啦&lt;/p&gt;

&lt;p&gt;[x]  个人blog首发版&lt;/p&gt;

&lt;h1 id=&quot;2可用编辑器&quot;&gt;2.可用编辑器&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown&quot;&gt;Cmd Markdown&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;优点是有markdown语法说明，非常适合刚接触的我。&lt;/p&gt;

&lt;p&gt;缺点就是需要注册，web端反应不是很快。&lt;/p&gt;

&lt;p&gt;Vscode：高效快捷,也可以预览。&lt;/p&gt;

&lt;p&gt;熟悉后，可以转战vscode，编写发表一体化。&lt;/p&gt;

&lt;h1 id=&quot;参考资料-1&quot;&gt;参考资料&lt;/h1&gt;
&lt;p&gt;【1】&lt;a href=&quot;https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown&quot;&gt;Cmd Markdown操作手册&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Tue, 09 Feb 2021 00:00:00 +0800</pubDate>
        <link>/lunie2021.github.io/jekyll/markdown.html</link>
        <guid isPermaLink="true">/lunie2021.github.io/jekyll/markdown.html</guid>
        
        <category>jekyll</category>
        
        <category>markdown</category>
        
        
        <category>Jekyll</category>
        
      </item>
    
  </channel>
</rss>
